import{_ as a,r as o,o as d,c as u,a as t,d as s,w as n,b as e,e as i,f as r}from"./app-330b5ec4.js";const _={},c=r(`<h1 id="messagecontext-class" tabindex="-1"><a class="header-anchor" href="#messagecontext-class" aria-hidden="true">#</a> MessageContext class</h1><p>消息类</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">MessageContext</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">BaseModel</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="public-members" tabindex="-1"><a class="header-anchor" href="#public-members" aria-hidden="true">#</a> Public Members</h2>`,4),h=t("thead",null,[t("tr",null,[t("th",null,"name"),t("th",null,"description")])],-1),g=t("td",null,"消息字体id",-1),m=t("td",null,"索引器",-1),M=t("td",null,"消息段列表",-1),I=t("td",null,"消息ID",-1),x=t("td",null,"消息序号",-1),f=t("td",null,"Gocq提供的纯文本信息",-1),C=t("td",null,"消息时间戳",-1),p=t("td",null,"比较重载",-1),S=t("td",null,"获取所有At的UID Notice:at全体不会被转换",-1),A=t("td",null,"获取所有图片信息",-1),E=t("td",null,"获取合并转发的ID",-1),P=t("td",null,"GetHashCode",-1),b=t("td",null,"获取语音URL 仅在消息为语音时有效",-1),k=t("td",null,"截取消息中的文字部分",-1),G=t("td",null,"QQ小程序判断（Xml与Json类型消息）",-1),v=t("td",null,"是否是转发消息",-1),w=t("td",null,"是否为纯图片消息",-1),R=t("td",null,"是否为单图片消息",-1),T=t("td",null,"标记此消息已读",-1),y=t("td",null,"判定消息段相等 (2 methods)",-1),q=t("td",null,"撤回本条消息",-1),B=t("td",null,"转纯文本信息",-1),N=t("td",null,"等于重载",-1),F=t("td",null,"不等于重载",-1),D=t("h2",{id:"see-also",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#see-also","aria-hidden":"true"},"#"),e(" See Also")],-1);function L(V,U){const l=o("RouterLink");return d(),u("div",null,[c,t("table",null,[h,t("tbody",null,[t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/Font.html"},{default:n(()=>[e("Font")]),_:1}),e(" { get; }")]),g]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/Item.html"},{default:n(()=>[e("Item")]),_:1}),e(" { get; }")]),m]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/MessageBody.html"},{default:n(()=>[e("MessageBody")]),_:1}),e(" { get; }")]),M]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/MessageId.html"},{default:n(()=>[e("MessageId")]),_:1}),e(" { get; }")]),I]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/MessageSequence.html"},{default:n(()=>[e("MessageSequence")]),_:1}),e(" { get; }")]),x]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/RawText.html"},{default:n(()=>[e("RawText")]),_:1}),e(" { get; }")]),f]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/Time.html"},{default:n(()=>[e("Time")]),_:1}),e(" { get; }")]),C]),t("tr",null,[t("td",null,[e("override "),s(l,{to:"/API/Sora.Entities/MessageContext/Equals.html"},{default:n(()=>[e("Equals")]),_:1}),e("(…)")]),p]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/GetAllAtList.html"},{default:n(()=>[e("GetAllAtList")]),_:1}),e("()")]),S]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/GetAllImage.html"},{default:n(()=>[e("GetAllImage")]),_:1}),e("()")]),A]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/GetForwardMsgId.html"},{default:n(()=>[e("GetForwardMsgId")]),_:1}),e("()")]),E]),t("tr",null,[t("td",null,[e("override "),s(l,{to:"/API/Sora.Entities/MessageContext/GetHashCode.html"},{default:n(()=>[e("GetHashCode")]),_:1}),e("()")]),P]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/GetRecordUrl.html"},{default:n(()=>[e("GetRecordUrl")]),_:1}),e("()")]),b]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/GetText.html"},{default:n(()=>[e("GetText")]),_:1}),e("()")]),k]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/IsCodeCard.html"},{default:n(()=>[e("IsCodeCard")]),_:1}),e("()")]),G]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/IsForwardMessage.html"},{default:n(()=>[e("IsForwardMessage")]),_:1}),e("()")]),v]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/IsMultiImageMessage.html"},{default:n(()=>[e("IsMultiImageMessage")]),_:1}),e("()")]),w]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/IsSingleImageMessage.html"},{default:n(()=>[e("IsSingleImageMessage")]),_:1}),e("()")]),R]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/MarkMessageRead.html"},{default:n(()=>[e("MarkMessageRead")]),_:1}),e("()")]),T]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/MessageEquals.html"},{default:n(()=>[e("MessageEquals")]),_:1}),e("(…)")]),y]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/RecallMessage.html"},{default:n(()=>[e("RecallMessage")]),_:1}),e("()")]),q]),t("tr",null,[t("td",null,[e("override "),s(l,{to:"/API/Sora.Entities/MessageContext/ToString.html"},{default:n(()=>[e("ToString")]),_:1}),e("()")]),B]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/op_Equality.html"},{default:n(()=>[e("operator ==")]),_:1})]),N]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageContext/op_Inequality.html"},{default:n(()=>[e("operator !=")]),_:1})]),F])])]),D,t("ul",null,[t("li",null,[e("class "),s(l,{to:"/API/Sora.Entities.Base/BaseModel.html"},{default:n(()=>[e("BaseModel")]),_:1})]),t("li",null,[e("namespace "),s(l,{to:"/API/Sora.html"},{default:n(()=>[e("Sora.Entities")]),_:1})])]),i(" DO NOT EDIT: generated by xmldocmd for Sora.dll ")])}const O=a(_,[["render",L],["__file","MessageContext.html.vue"]]);export{O as default};
