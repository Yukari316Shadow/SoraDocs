import{_ as t,r,o as c,c as p,a as e,b as a,d as n,w as o,e as d,f as l}from"./app-330b5ec4.js";const i={},m=l(`<h1 id="soracommand-commandexpressions-property" tabindex="-1"><a class="header-anchor" href="#soracommand-commandexpressions-property" aria-hidden="true">#</a> SoraCommand.CommandExpressions property</h1><p>正则指令表达式</p><p>默认为全字匹配(注意:由于使用的是正则匹配模式，部分符号需要转义，如<code>\\?</code>)</p><p>也可以为正则表达式</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> CommandExpressions <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,6);function u(h,k){const s=r("RouterLink");return c(),p("div",null,[m,e("ul",null,[e("li",null,[a("class "),n(s,{to:"/API/Sora.Attributes.Command/SoraCommand.html"},{default:o(()=>[a("SoraCommand")]),_:1})]),e("li",null,[a("namespace "),n(s,{to:"/API/Sora.html"},{default:o(()=>[a("Sora.Attributes.Command")]),_:1})])]),d(" DO NOT EDIT: generated by xmldocmd for Sora.dll ")])}const x=t(i,[["render",u],["__file","CommandExpressions.html.vue"]]);export{x as default};
