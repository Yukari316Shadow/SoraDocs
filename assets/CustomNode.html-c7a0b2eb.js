import{_ as d,r,o as c,c as l,a as s,b as a,d as t,w as n,e as p,f as o}from"./app-330b5ec4.js";const i={},u=o(`<h1 id="customnode-constructor-1-of-3" tabindex="-1"><a class="header-anchor" href="#customnode-constructor-1-of-3" aria-hidden="true">#</a> CustomNode constructor (1 of 3)</h1><p>构造自定义节点</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">CustomNode</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> messageId<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>parameter</th><th>description</th></tr></thead><tbody><tr><td>messageId</td><td>消息ID</td></tr></tbody></table><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,5),m=o(`<hr><h1 id="customnode-constructor-2-of-3" tabindex="-1"><a class="header-anchor" href="#customnode-constructor-2-of-3" aria-hidden="true">#</a> CustomNode constructor (2 of 3)</h1><p>构造自定义节点q</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">CustomNode</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">long</span></span> userId<span class="token punctuation">,</span> <span class="token class-name">MessageBody</span> customMessage<span class="token punctuation">,</span> 
    <span class="token class-name">DateTimeOffset<span class="token punctuation">?</span></span> time <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>parameter</th><th>description</th></tr></thead><tbody><tr><td>name</td><td>发送者名</td></tr><tr><td>userId</td><td>发送者ID</td></tr><tr><td>customMessage</td><td>消息段</td></tr><tr><td>time</td><td>消息段转发时间</td></tr></tbody></table><h2 id="see-also-1" tabindex="-1"><a class="header-anchor" href="#see-also-1" aria-hidden="true">#</a> See Also</h2>`,6),h=o(`<hr><h1 id="customnode-constructor-3-of-3" tabindex="-1"><a class="header-anchor" href="#customnode-constructor-3-of-3" aria-hidden="true">#</a> CustomNode constructor (3 of 3)</h1><p>构造自定义节点</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token function">CustomNode</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">long</span></span> userId<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> message<span class="token punctuation">,</span> <span class="token class-name">DateTimeOffset<span class="token punctuation">?</span></span> time <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>parameter</th><th>description</th></tr></thead><tbody><tr><td>name</td><td>发送者名</td></tr><tr><td>userId</td><td>发送者ID</td></tr><tr><td>message</td><td>纯文本消息</td></tr><tr><td>time</td><td>消息段转发时间</td></tr></tbody></table><h2 id="see-also-2" tabindex="-1"><a class="header-anchor" href="#see-also-2" aria-hidden="true">#</a> See Also</h2>`,6);function k(f,b){const e=r("RouterLink");return c(),l("div",null,[u,s("ul",null,[s("li",null,[a("record "),t(e,{to:"/API/Sora.Entities.Segment.DataModel/CustomNode.html"},{default:n(()=>[a("CustomNode")]),_:1})]),s("li",null,[a("namespace "),t(e,{to:"/API/Sora.html"},{default:n(()=>[a("Sora.Entities.Segment.DataModel")]),_:1})])]),m,s("ul",null,[s("li",null,[a("class "),t(e,{to:"/API/Sora.Entities/MessageBody.html"},{default:n(()=>[a("MessageBody")]),_:1})]),s("li",null,[a("record "),t(e,{to:"/API/Sora.Entities.Segment.DataModel/CustomNode.html"},{default:n(()=>[a("CustomNode")]),_:1})]),s("li",null,[a("namespace "),t(e,{to:"/API/Sora.html"},{default:n(()=>[a("Sora.Entities.Segment.DataModel")]),_:1})])]),h,s("ul",null,[s("li",null,[a("record "),t(e,{to:"/API/Sora.Entities.Segment.DataModel/CustomNode.html"},{default:n(()=>[a("CustomNode")]),_:1})]),s("li",null,[a("namespace "),t(e,{to:"/API/Sora.html"},{default:n(()=>[a("Sora.Entities.Segment.DataModel")]),_:1})])]),p(" DO NOT EDIT: generated by xmldocmd for Sora.dll ")])}const _=d(i,[["render",k],["__file","CustomNode.html.vue"]]);export{_ as default};
