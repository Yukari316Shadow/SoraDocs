import{_ as o,z as a,A as d,Y as t,U as s,a0 as n,C as e,X as u,a6 as i,Q as r}from"./framework-cb9358d9.js";const c={},_=i(`<h1 id="messagebody-class" tabindex="-1"><a class="header-anchor" href="#messagebody-class" aria-hidden="true">#</a> MessageBody class</h1><p>消息段</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">MessageBody</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IList<span class="token punctuation">&lt;</span>SoraSegment<span class="token punctuation">&gt;</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="public-members" tabindex="-1"><a class="header-anchor" href="#public-members" aria-hidden="true">#</a> Public Members</h2>`,4),h=t("thead",null,[t("tr",null,[t("th",null,"name"),t("th",null,"description")])],-1),m=t("td",null,"构造消息段列表",-1),p=t("td",null,"构造消息段列表",-1),g=t("td",null,"消息段数量",-1),y=t("td",null,"只读",-1),I=t("td",null,"索引器",-1),f=t("td",null,"添加消息段 (2 methods)",-1),A=t("td",null,"AddRange (2 methods)",-1),B=t("td",null,"添加纯文本消息段",-1),S=t("td",null,"清空消息段",-1),M=t("td",null,"判断包含",-1),E=t("td",null,"复制",-1),P=t("td",null,"迭代器",-1),b=t("td",null,"索引查找",-1),k=t("td",null,"通过ID查找索引",-1),v=t("td",null,"插入消息段",-1),x=t("td",null,"删除消息段",-1),R=t("td",null,"RemoveAll",-1),C=t("td",null,"删除消息段",-1),T=t("td",null,"转普通列表",-1),O=t("td",null,"运算重载 (3 operators)",-1),N=t("td",null,"隐式类型转换",-1),L=t("h2",{id:"see-also",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#see-also","aria-hidden":"true"},"#"),e(" See Also")],-1);function V(w,D){const l=r("RouterLink");return a(),d("div",null,[_,t("table",null,[h,t("tbody",null,[t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/MessageBody.html"},{default:n(()=>[e("MessageBody")]),_:1}),e("()")]),m]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/MessageBody.html"},{default:n(()=>[e("MessageBody")]),_:1}),e("(…)")]),p]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/Count.html"},{default:n(()=>[e("Count")]),_:1}),e(" { get; }")]),g]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/IsReadOnly.html"},{default:n(()=>[e("IsReadOnly")]),_:1}),e(" { get; }")]),y]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/Item.html"},{default:n(()=>[e("Item")]),_:1}),e(" { get; set; }")]),I]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/Add.html"},{default:n(()=>[e("Add")]),_:1}),e("(…)")]),f]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/AddRange.html"},{default:n(()=>[e("AddRange")]),_:1}),e("(…)")]),A]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/AddText.html"},{default:n(()=>[e("AddText")]),_:1}),e("(…)")]),B]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/Clear.html"},{default:n(()=>[e("Clear")]),_:1}),e("()")]),S]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/Contains.html"},{default:n(()=>[e("Contains")]),_:1}),e("(…)")]),M]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/CopyTo.html"},{default:n(()=>[e("CopyTo")]),_:1}),e("(…)")]),E]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/GetEnumerator.html"},{default:n(()=>[e("GetEnumerator")]),_:1}),e("()")]),P]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/IndexOf.html"},{default:n(()=>[e("IndexOf")]),_:1}),e("(…)")]),b]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/IndexOfById.html"},{default:n(()=>[e("IndexOfById")]),_:1}),e("(…)")]),k]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/Insert.html"},{default:n(()=>[e("Insert")]),_:1}),e("(…)")]),v]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/Remove.html"},{default:n(()=>[e("Remove")]),_:1}),e("(…)")]),x]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/RemoveAll.html"},{default:n(()=>[e("RemoveAll")]),_:1}),e("(…)")]),R]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/RemoveAt.html"},{default:n(()=>[e("RemoveAt")]),_:1}),e("(…)")]),C]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/ToList.html"},{default:n(()=>[e("ToList")]),_:1}),e("()")]),T]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/op_Addition.html"},{default:n(()=>[e("operator +")]),_:1})]),O]),t("tr",null,[t("td",null,[s(l,{to:"/API/Sora.Entities/MessageBody/op_Implicit.html"},{default:n(()=>[e("implicit operator")]),_:1})]),N])])]),L,t("ul",null,[t("li",null,[e("struct "),s(l,{to:"/API/Sora.Entities.Segment/SoraSegment.html"},{default:n(()=>[e("SoraSegment")]),_:1})]),t("li",null,[e("namespace "),s(l,{to:"/API/Sora.html"},{default:n(()=>[e("Sora.Entities")]),_:1})])]),u(" DO NOT EDIT: generated by xmldocmd for Sora.dll ")])}const z=o(c,[["render",V],["__file","MessageBody.html.vue"]]);export{z as default};
