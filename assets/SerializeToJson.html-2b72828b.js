import{_ as l,r as i,o as r,c,a as e,b as a,d as n,w as o,e as d,f as t}from"./app-330b5ec4.js";const p={},u=t(`<h1 id="jsonserializer-serializetojson-method-1-of-2" tabindex="-1"><a class="header-anchor" href="#jsonserializer-serializetojson-method-1-of-2" aria-hidden="true">#</a> JsonSerializer.SerializeToJson method (1 of 2)</h1><p>序列化为json</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">SerializeToJson</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">MessageBody</span> message<span class="token punctuation">,</span> 
    <span class="token class-name">Formatting</span> formatting <span class="token operator">=</span> Formatting<span class="token punctuation">.</span>None<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,4),m=t(`<hr><h1 id="jsonserializer-serializetojson-method-2-of-2" tabindex="-1"><a class="header-anchor" href="#jsonserializer-serializetojson-method-2-of-2" aria-hidden="true">#</a> JsonSerializer.SerializeToJson method (2 of 2)</h1><p>序列化为json</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">SerializeToJson</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">SoraSegment</span> message<span class="token punctuation">,</span> 
    <span class="token class-name">Formatting</span> formatting <span class="token operator">=</span> Formatting<span class="token punctuation">.</span>None<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="see-also-1" tabindex="-1"><a class="header-anchor" href="#see-also-1" aria-hidden="true">#</a> See Also</h2>`,5);function h(k,S){const s=i("RouterLink");return r(),c("div",null,[u,e("ul",null,[e("li",null,[a("class "),n(s,{to:"/API/Sora.Entities/MessageBody.html"},{default:o(()=>[a("MessageBody")]),_:1})]),e("li",null,[a("class "),n(s,{to:"/API/Sora.Serializer/JsonSerializer.html"},{default:o(()=>[a("JsonSerializer")]),_:1})]),e("li",null,[a("namespace "),n(s,{to:"/API/Sora.html"},{default:o(()=>[a("Sora.Serializer")]),_:1})])]),m,e("ul",null,[e("li",null,[a("class "),n(s,{to:"/API/Sora.Entities.Segment/SoraSegment.html"},{default:o(()=>[a("SoraSegment")]),_:1})]),e("li",null,[a("class "),n(s,{to:"/API/Sora.Serializer/JsonSerializer.html"},{default:o(()=>[a("JsonSerializer")]),_:1})]),e("li",null,[a("namespace "),n(s,{to:"/API/Sora.html"},{default:o(()=>[a("Sora.Serializer")]),_:1})])]),d(" DO NOT EDIT: generated by xmldocmd for Sora.dll ")])}const g=l(p,[["render",h],["__file","SerializeToJson.html.vue"]]);export{g as default};
