import{_ as n,z as s,A as a,a6 as e}from"./framework-cb9358d9.js";const t={},p=e(`<h1 id="给bot添加一些逻辑" tabindex="-1"><a class="header-anchor" href="#给bot添加一些逻辑" aria-hidden="true">#</a> 给Bot添加一些逻辑</h1><p>接下来的向导将会示范如何让自己的bot拥有复读的功能</p><p><s>最简单的复读，最极致的享受</s></p><div class="custom-container tip"><p class="custom-container-title">小提示</p><p>请不要在公共的群内测试此功能</p><p><s>会被群友围殴的</s></p></div><h2 id="添加事件回调函数" tabindex="-1"><a class="header-anchor" href="#添加事件回调函数" aria-hidden="true">#</a> 添加事件回调函数</h2><p>在bot服务器实例和服务启动函数(<code>await service.StartService();</code>)中间添加一个收到消息事件的回调处理代码</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>service<span class="token punctuation">.</span>Event<span class="token punctuation">.</span>OnGroupMessage <span class="token operator">+=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>msgType<span class="token punctuation">,</span> eventArgs<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
                                <span class="token punctuation">{</span>
                                    
                                <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p>接下来的代码需要调用<code>eventArgs</code>中的方法或者<code>Group</code>实例来和群友进行互动</p></div><h2 id="使用快捷接口进行复读" tabindex="-1"><a class="header-anchor" href="#使用快捷接口进行复读" aria-hidden="true">#</a> 使用快捷接口进行复读</h2><p><s>为什么我要专门写这种功能</s></p><p>在事件处理代码中添加以下代码</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>await eventArgs.Repeat();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>复读功能就实现好了 <s>怎么样，很简单吧！</s></p><h3 id="完成后的代码总览" tabindex="-1"><a class="header-anchor" href="#完成后的代码总览" aria-hidden="true">#</a> 完成后的代码总览</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Sora</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Sora<span class="token punctuation">.</span>Interfaces</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Sora<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Config</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Sora<span class="token punctuation">.</span>Util</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">YukariToolBox<span class="token punctuation">.</span>LightLog</span><span class="token punctuation">;</span>

<span class="token comment">//设置log等级</span>
Log<span class="token punctuation">.</span>LogConfiguration
   <span class="token punctuation">.</span><span class="token function">EnableConsoleOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token punctuation">.</span><span class="token function">SetLogLevel</span><span class="token punctuation">(</span>LogLevel<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//实例化Sora服务</span>
<span class="token class-name">ISoraService</span> service <span class="token operator">=</span> SoraServiceFactory<span class="token punctuation">.</span><span class="token function">CreateService</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ServerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

service<span class="token punctuation">.</span>Event<span class="token punctuation">.</span>OnGroupMessage <span class="token operator">+=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>sender<span class="token punctuation">,</span> eventArgs<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">//最简单的复读（x</span>
    <span class="token keyword">await</span> eventArgs<span class="token punctuation">.</span><span class="token function">Repeat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//启动服务并捕捉错误</span>
<span class="token keyword">await</span> service<span class="token punctuation">.</span><span class="token function">StartService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">RunCatch</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> Log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Sora Service&quot;</span><span class="token punctuation">,</span> Log<span class="token punctuation">.</span><span class="token function">ErrorLogBuilder</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token function">Delay</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用群聊接口进行复读" tabindex="-1"><a class="header-anchor" href="#使用群聊接口进行复读" aria-hidden="true">#</a> 使用群聊接口进行复读</h2><blockquote><p>调用<code>Group</code>中的<code>SendGroupMessage()</code>函数发送群聊消息</p></blockquote><p>在事件处理代码中添加以下代码</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> eventArgs<span class="token punctuation">.</span>SourceGroup<span class="token punctuation">.</span><span class="token function">SendGroupMessage</span><span class="token punctuation">(</span>eventArgs<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>MessageBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>另一种的复读功能也就实现好了</p><h3 id="完成后的代码总览-1" tabindex="-1"><a class="header-anchor" href="#完成后的代码总览-1" aria-hidden="true">#</a> 完成后的代码总览</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Sora</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Sora<span class="token punctuation">.</span>Interfaces</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Sora<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Config</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Sora<span class="token punctuation">.</span>Util</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">YukariToolBox<span class="token punctuation">.</span>LightLog</span><span class="token punctuation">;</span>

<span class="token comment">//设置log等级</span>
Log<span class="token punctuation">.</span>LogConfiguration
   <span class="token punctuation">.</span><span class="token function">EnableConsoleOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token punctuation">.</span><span class="token function">SetLogLevel</span><span class="token punctuation">(</span>LogLevel<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//实例化Sora服务</span>
<span class="token class-name">ISoraService</span> service <span class="token operator">=</span> SoraServiceFactory<span class="token punctuation">.</span><span class="token function">CreateService</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ServerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

service<span class="token punctuation">.</span>Event<span class="token punctuation">.</span>OnGroupMessage <span class="token operator">+=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>sender<span class="token punctuation">,</span> eventArgs<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">//发送群消息(List消息段)</span>
    <span class="token keyword">await</span> eventArgs<span class="token punctuation">.</span>SourceGroup<span class="token punctuation">.</span><span class="token function">SendGroupMessage</span><span class="token punctuation">(</span>eventArgs<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>MessageBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//启动服务并捕捉错误</span>
<span class="token keyword">await</span> service<span class="token punctuation">.</span><span class="token function">StartService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">RunCatch</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> Log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Sora Service&quot;</span><span class="token punctuation">,</span> Log<span class="token punctuation">.</span><span class="token function">ErrorLogBuilder</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token function">Delay</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="简单的指南结束了哦" tabindex="-1"><a class="header-anchor" href="#简单的指南结束了哦" aria-hidden="true">#</a> 简单的指南结束了哦</h2><p><s>其实这指南就教会了一个复读</s></p><p>Sora框架的快速使用指南到这里就结束了，阅读到这里相信你对框架的使用有了一定初步的了解</p><p><s>相信你已经可以写出优秀的机器人了，我们来做更复杂的bot吧!</s></p><p>框架的更多使用方法将在后续的文档进行介绍<s>在做了在做了</s></p><p>由于文档很多东西都没写，所以尽量多使用IDE的智能提示<s>我注释应该写的足够详细了</s></p>`,28),o=[p];function c(i,u){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","firstbot.html.vue"]]);export{r as default};
