import{_ as o,z as d,A as m,Y as a,U as t,a0 as l,C as n,X as s,a6 as r,Q as u}from"./framework-cb9358d9.js";const i={},c=r(`<h1 id="commandmanager-class" tabindex="-1"><a class="header-anchor" href="#commandmanager-class" aria-hidden="true">#</a> CommandManager class</h1><p>特性指令管理器</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">CommandManager</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="public-members" tabindex="-1"><a class="header-anchor" href="#public-members" aria-hidden="true">#</a> Public Members</h2>`,4),h=a("thead",null,[a("tr",null,[a("th",null,"name"),a("th",null,"description")])],-1),_=a("td",null,"指令服务正常运行标识",-1),C=a("td",null,"删除指定ID的指令",-1),p=a("td",null,"获取当前服务下的所有指令组名",-1),g=a("td",null,"获取指定群中的指令使能列表",-1),S=a("td",null,"获取已注册过的实例",-1),b=a("td",null,"自动注册所有指令",-1),f=a("td",null,"动态注册指令 (2 methods)",-1),y=a("td",null,"动态注册指令 (2 methods)",-1),I=a("td",null,"尝试禁用指令组",-1),M=a("td",null,"禁用群组中的指令",-1),P=a("td",null,"尝试启用指令组",-1),A=a("td",null,"启用群组中禁用的指令",-1),D=a("h2",{id:"see-also",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#see-also","aria-hidden":"true"},"#"),n(" See Also")],-1);function G(v,T){const e=u("RouterLink");return d(),m("div",null,[c,a("table",null,[h,a("tbody",null,[a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/ServiceIsRunning.html"},{default:l(()=>[n("ServiceIsRunning")]),_:1}),n(" { get; }")]),_]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/DeleteDynamicCommand.html"},{default:l(()=>[n("DeleteDynamicCommand")]),_:1}),n("(…)")]),C]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/GetCommandList.html"},{default:l(()=>[n("GetCommandList")]),_:1}),n("()")]),p]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/GetGroupCmdSeries.html"},{default:l(()=>[n("GetGroupCmdSeries")]),_:1}),n("(…)")]),g]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/GetInstance.html"},{default:l(()=>[n("GetInstance<T>")]),_:1}),n("(…)")]),S]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/MappingCommands.html"},{default:l(()=>[n("MappingCommands")]),_:1}),n("(…)")]),b]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/RegisterGroupDynamicCommand.html"},{default:l(()=>[n("RegisterGroupDynamicCommand")]),_:1}),n("(…)")]),f]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/RegisterPrivateDynamicCommand.html"},{default:l(()=>[n("RegisterPrivateDynamicCommand")]),_:1}),n("(…)")]),y]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/TryDisableCommandSeries.html"},{default:l(()=>[n("TryDisableCommandSeries")]),_:1}),n("(…)")]),I]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/TryDisableGroupCommand.html"},{default:l(()=>[n("TryDisableGroupCommand")]),_:1}),n("(…)")]),M]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/TryEnableCommandSeries.html"},{default:l(()=>[n("TryEnableCommandSeries")]),_:1}),n("(…)")]),P]),a("tr",null,[a("td",null,[t(e,{to:"/API/Sora.Command/CommandManager/TryEnableGroupCommand.html"},{default:l(()=>[n("TryEnableGroupCommand")]),_:1}),n("(…)")]),A])])]),D,a("ul",null,[a("li",null,[n("namespace "),t(e,{to:"/API/Sora.html"},{default:l(()=>[n("Sora.Command")]),_:1})])]),s(" DO NOT EDIT: generated by xmldocmd for Sora.dll ")])}const x=o(i,[["render",G],["__file","CommandManager.html.vue"]]);export{x as default};
